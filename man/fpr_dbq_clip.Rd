% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fpr_dbq_clip.R
\name{fpr_dbq_clip}
\alias{fpr_dbq_clip}
\title{Clips a point layer by a filtered polygon layer}
\usage{
fpr_dbq_clip(
  schtab_pnt = NULL,
  schtab_pol = NULL,
  join_column = NULL,
  schtab_pol_filter = NULL,
  cols_schtab_pnt = "*"
)
}
\arguments{
\item{schtab_pnt}{String (quoted) name of point layer schema.table.}

\item{schtab_pol}{String (quoted) name of polygon layer schema.table.}

\item{join_column}{String (quoted) name of column to join tables on from polygon. See column names of any table with \link{fpr_dbq_lscols}.}

\item{schtab_pol_filter}{String (quoted) or quoted comma seperated vector that defines how the polygon table is filtered, example c("FRAN", "NECR").}

\item{cols_schtab_pnt}{String (quoted) or list of column names to select from point layer, default is all columns (*). Must include the geom column if user wants an sf object.}
}
\value{
Sf of clipped point layer
}
\description{
Returns the clipped point layer containing user specified columns from point layer as well as column indicating
associated value used to filter plygon layer.
}
\examples{
\dontrun{fpr_db_query(query = fpr_dbq_clip('whse_environmental_monitoring.envcan_hydrometric_stn_sp',
'whse_basemapping.fwa_watershed_groups_poly', 'watershed_group_code', c("FRAN", "NECR")))}
}
\seealso{
Other database postgres: 
\code{\link{fpr_db_conn}()},
\code{\link{fpr_db_query}()},
\code{\link{fpr_dbq_lscols}()},
\code{\link{fpr_dbq_lstables}()},
\code{\link{fpr_dbq_subset}()}
}
\concept{database postgres}
